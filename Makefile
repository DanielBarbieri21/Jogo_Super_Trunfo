# Makefile para Super Trunfo Brasil - Edi√ß√£o Moderna
# Compilador e flags
CC = gcc
CFLAGS = -Wall -Wextra -std=c99 -O2 -g
GTK_FLAGS = `pkg-config --cflags --libs gtk+-3.0`
LDFLAGS = $(GTK_FLAGS)

# Nome do execut√°vel
TARGET = super_trunfo_moderno
SOURCE = super_trunfo_moderno.c

# Diret√≥rios
SRC_DIR = .
BUILD_DIR = build
ASSETS_DIR = assets
DOCS_DIR = docs

# Arquivos de origem
SOURCES = $(wildcard $(SRC_DIR)/*.c)
OBJECTS = $(SOURCES:$(SRC_DIR)/%.c=$(BUILD_DIR)/%.o)

# Cores para output
RED = \033[0;31m
GREEN = \033[0;32m
YELLOW = \033[1;33m
BLUE = \033[0;34m
PURPLE = \033[0;35m
CYAN = \033[0;36m
WHITE = \033[1;37m
NC = \033[0m # No Color

# Regra padr√£o
all: setup $(TARGET)

# Criar diret√≥rios necess√°rios
setup:
	@echo "$(BLUE)üîß Configurando ambiente de build...$(NC)"
	@mkdir -p $(BUILD_DIR)
	@mkdir -p $(ASSETS_DIR)
	@mkdir -p $(DOCS_DIR)
	@echo "$(GREEN)‚úÖ Ambiente configurado!$(NC)"

# Compilar o execut√°vel principal
$(TARGET): $(OBJECTS)
	@echo "$(BLUE)üî® Compilando Super Trunfo Moderno...$(NC)"
	$(CC) $(OBJECTS) -o $(TARGET) $(LDFLAGS)
	@echo "$(GREEN)‚úÖ Compila√ß√£o conclu√≠da!$(NC)"
	@echo "$(CYAN)üéÆ Execute com: ./$(TARGET)$(NC)"

# Compilar arquivos objeto
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c
	@echo "$(YELLOW)üì¶ Compilando $<...$(NC)"
	$(CC) $(CFLAGS) -c $< -o $@

# Compilar vers√µes antigas (compatibilidade)
legacy: setup
	@echo "$(BLUE)üî® Compilando vers√µes legadas...$(NC)"
	$(CC) $(CFLAGS) super_trunfo_gui.c -o super_trunfo_gui $(LDFLAGS)
	$(CC) $(CFLAGS) Jogo_Super_Trunfo_Fases/aventureiro.c -o aventureiro $(LDFLAGS)
	$(CC) $(CFLAGS) Jogo_Super_Trunfo_Fases/mestre.c -o mestre $(LDFLAGS)
	$(CC) $(CFLAGS) Jogo_Super_Trunfo_Fases/novato.c -o novato $(LDFLAGS)
	@echo "$(GREEN)‚úÖ Vers√µes legadas compiladas!$(NC)"

# Instalar depend√™ncias (Ubuntu/Debian)
install-deps:
	@echo "$(BLUE)üì¶ Instalando depend√™ncias...$(NC)"
	@sudo apt-get update
	@sudo apt-get install -y build-essential pkg-config libgtk-3-dev
	@echo "$(GREEN)‚úÖ Depend√™ncias instaladas!$(NC)"

# Instalar depend√™ncias (Windows/MSYS2)
install-deps-windows:
	@echo "$(BLUE)üì¶ Instalando depend√™ncias no Windows...$(NC)"
	@echo "Execute no MSYS2:"
	@echo "pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-gtk3 mingw-w64-x86_64-pkg-config"

# Criar assets (bandeiras dos estados)
create-assets:
	@echo "$(BLUE)üé® Criando assets...$(NC)"
	@mkdir -p $(ASSETS_DIR)/bandeiras
	@echo "$(GREEN)‚úÖ Diret√≥rio de assets criado!$(NC)"
	@echo "$(YELLOW)üí° Adicione as imagens das bandeiras em $(ASSETS_DIR)/bandeiras/$(NC)"

# Executar o jogo
run: $(TARGET)
	@echo "$(PURPLE)üéÆ Iniciando Super Trunfo Brasil...$(NC)"
	./$(TARGET)

# Executar com debug
debug: CFLAGS += -DDEBUG -g3
debug: $(TARGET)
	@echo "$(PURPLE)üêõ Iniciando em modo debug...$(NC)"
	gdb ./$(TARGET)

# Limpar arquivos de build
clean:
	@echo "$(BLUE)üßπ Limpando arquivos de build...$(NC)"
	rm -rf $(BUILD_DIR)
	rm -f $(TARGET)
	rm -f super_trunfo_gui
	rm -f aventureiro mestre novato
	rm -f *.exe
	@echo "$(GREEN)‚úÖ Limpeza conclu√≠da!$(NC)"

# Limpar tudo (incluindo assets)
distclean: clean
	@echo "$(BLUE)üßπ Limpeza completa...$(NC)"
	rm -rf $(ASSETS_DIR)
	rm -rf $(DOCS_DIR)
	rm -f cartas_salvas.txt
	rm -f cartas.txt
	@echo "$(GREEN)‚úÖ Limpeza completa conclu√≠da!$(NC)"

# Criar documenta√ß√£o
docs:
	@echo "$(BLUE)üìö Gerando documenta√ß√£o...$(NC)"
	@echo "# Super Trunfo Brasil - Documenta√ß√£o" > $(DOCS_DIR)/README.md
	@echo "" >> $(DOCS_DIR)/README.md
	@echo "## Compila√ß√£o" >> $(DOCS_DIR)/README.md
	@echo "\`\`\`bash" >> $(DOCS_DIR)/README.md
	@echo "make" >> $(DOCS_DIR)/README.md
	@echo "\`\`\`" >> $(DOCS_DIR)/README.md
	@echo "" >> $(DOCS_DIR)/README.md
	@echo "## Execu√ß√£o" >> $(DOCS_DIR)/README.md
	@echo "\`\`\`bash" >> $(DOCS_DIR)/README.md
	@echo "make run" >> $(DOCS_DIR)/README.md
	@echo "\`\`\`" >> $(DOCS_DIR)/README.md
	@echo "$(GREEN)‚úÖ Documenta√ß√£o criada em $(DOCS_DIR)/README.md$(NC)"

# Verificar depend√™ncias
check-deps:
	@echo "$(BLUE)üîç Verificando depend√™ncias...$(NC)"
	@pkg-config --exists gtk+-3.0 && echo "$(GREEN)‚úÖ GTK+3 encontrado$(NC)" || echo "$(RED)‚ùå GTK+3 n√£o encontrado$(NC)"
	@which gcc > /dev/null && echo "$(GREEN)‚úÖ GCC encontrado$(NC)" || echo "$(RED)‚ùå GCC n√£o encontrado$(NC)"
	@which pkg-config > /dev/null && echo "$(GREEN)‚úÖ pkg-config encontrado$(NC)" || echo "$(RED)‚ùå pkg-config n√£o encontrado$(NC)"

# Testar compila√ß√£o
test: clean all
	@echo "$(BLUE)üß™ Testando compila√ß√£o...$(NC)"
	@test -f $(TARGET) && echo "$(GREEN)‚úÖ Teste passou!$(NC)" || echo "$(RED)‚ùå Teste falhou!$(NC)"

# Criar pacote de distribui√ß√£o
package: all
	@echo "$(BLUE)üì¶ Criando pacote de distribui√ß√£o...$(NC)"
	@mkdir -p dist
	@cp $(TARGET) dist/
	@cp README.md dist/
	@cp -r $(ASSETS_DIR) dist/ 2>/dev/null || true
	@echo "$(GREEN)‚úÖ Pacote criado em dist/$(NC)"

# Instalar no sistema
install: $(TARGET)
	@echo "$(BLUE)üì¶ Instalando Super Trunfo Brasil...$(NC)"
	@sudo cp $(TARGET) /usr/local/bin/
	@sudo chmod +x /usr/local/bin/$(TARGET)
	@echo "$(GREEN)‚úÖ Instalado com sucesso!$(NC)"
	@echo "$(CYAN)üéÆ Execute com: super_trunfo_moderno$(NC)"

# Desinstalar
uninstall:
	@echo "$(BLUE)üóëÔ∏è Desinstalando Super Trunfo Brasil...$(NC)"
	@sudo rm -f /usr/local/bin/$(TARGET)
	@echo "$(GREEN)‚úÖ Desinstalado com sucesso!$(NC)"

# Mostrar ajuda
help:
	@echo "$(WHITE)üáßüá∑ Super Trunfo Brasil - Makefile$(NC)"
	@echo ""
	@echo "$(CYAN)Comandos dispon√≠veis:$(NC)"
	@echo "  $(YELLOW)make$(NC)           - Compilar o jogo"
	@echo "  $(YELLOW)make run$(NC)        - Executar o jogo"
	@echo "  $(YELLOW)make debug$(NC)      - Executar em modo debug"
	@echo "  $(YELLOW)make legacy$(NC)     - Compilar vers√µes antigas"
	@echo "  $(YELLOW)make clean$(NC)       - Limpar arquivos de build"
	@echo "  $(YELLOW)make install$(NC)    - Instalar no sistema"
	@echo "  $(YELLOW)make uninstall$(NC)  - Desinstalar"
	@echo "  $(YELLOW)make package$(NC)    - Criar pacote de distribui√ß√£o"
	@echo "  $(YELLOW)make docs$(NC)       - Gerar documenta√ß√£o"
	@echo "  $(YELLOW)make help$(NC)       - Mostrar esta ajuda"
	@echo ""
	@echo "$(CYAN)Depend√™ncias:$(NC)"
	@echo "  $(YELLOW)make install-deps$(NC)     - Instalar depend√™ncias (Linux)"
	@echo "  $(YELLOW)make install-deps-windows$(NC) - Instalar depend√™ncias (Windows)"
	@echo "  $(YELLOW)make check-deps$(NC)       - Verificar depend√™ncias"

# Regras que n√£o s√£o arquivos
.PHONY: all setup legacy install-deps install-deps-windows create-assets run debug clean distclean docs check-deps test package install uninstall help

# Mostrar informa√ß√µes do projeto
info:
	@echo "$(WHITE)üáßüá∑ Super Trunfo Brasil - Edi√ß√£o Moderna$(NC)"
	@echo ""
	@echo "$(CYAN)üìã Informa√ß√µes do Projeto:$(NC)"
	@echo "  $(YELLOW)Vers√£o:$(NC) 2.0 Moderna"
	@echo "  $(YELLOW)Linguagem:$(NC) C com GTK+3"
	@echo "  $(YELLOW)Plataforma:$(NC) Linux, Windows (MSYS2)"
	@echo "  $(YELLOW)Estados:$(NC) 27 (26 estados + DF)"
	@echo ""
	@echo "$(CYAN)üéÆ Funcionalidades:$(NC)"
	@echo "  ‚Ä¢ Interface moderna e responsiva"
	@echo "  ‚Ä¢ Editor de cartas avan√ßado"
	@echo "  ‚Ä¢ Comparador interativo"
	@echo "  ‚Ä¢ Dados reais do Brasil"
	@echo "  ‚Ä¢ Sistema de salvamento"
	@echo "  ‚Ä¢ Estat√≠sticas em tempo real"
